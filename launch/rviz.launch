<launch>
  <!-- 使用仿真时间（Gazebo 发布的 /clock） -->
  <param name="use_sim_time" value="true"/>

  <!-- 启动 Gazebo 默认空世界 -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find gazebo_ros)/worlds/empty.world"/>
  </include>

  <!-- 加载 URDF 模型到参数服务器 -->
  <param name="robot_description" 
       command="$(find xacro)/xacro $(find ur5e_description)/urdf/ur5e.xacro"/>

  <!-- 启动 robot_state_publisher，根据 /joint_states 发布 TF 变换 -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen"/>
  
  <!-- 启动 joint_state_publisher，设置初始关节状态为直立状态 -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <rosparam>
      joint_states:
        shoulder_pan_joint: 0.0
        shoulder_lift_joint: 0.0
        elbow_joint: 0.0
        wrist_1_joint: 0.0
        wrist_2_joint: 0.0
        wrist_3_joint: 0.0
    </rosparam>
  </node>

  <!-- 注释掉原有的 Joint State Publisher GUI，避免手动操作干扰初始状态 -->
  <!-- <node pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" name="joint_state_publisher_gui" output="screen"/> -->

  <!-- 在 Gazebo 中生成 UR5e 机器人 -->
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_ur5e" args="-urdf -param robot_description -model ur5e" output="screen"/>

  <!-- 启动 RViz 并加载 ur5e.rviz 配置 -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find ur5e_description)/cfg/view_robot.rviz" output="screen"/>
</launch>
